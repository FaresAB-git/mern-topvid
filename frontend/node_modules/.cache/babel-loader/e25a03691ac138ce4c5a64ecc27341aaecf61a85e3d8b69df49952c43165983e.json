{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nconst useFetch = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [titre, setTitre] = useState('');\n  useEffect(() => {\n    const api_key = \"AIzaSyAvbx7hVYcSosSEoqY8vmHMIKjmgUcQQW0\";\n    var requetteYoutube = \"https://www.googleapis.com/youtube/v3/videos?key=\" + api_key + \"&part=snippet&chart=mostPopular&regionCode=FR\";\n    axios.get(requetteYoutube).then(function (response) {\n      console.log(response);\n      //console.log(response.data.items[0].snippet.title)\n      setTitre(response.data.items[0].snippet.title);\n      setUrl(\"https://www.youtube.com/watch?v=\" + response.data.items[0].id);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  useEffect(async () => {\n    const vid = {\n      titre,\n      url\n    };\n    const request = await fetch('/api/topVids', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vid\n      })\n    });\n    const json = await request.json();\n  }, [url]);\n};\n_s(useFetch, \"hD5uYPI66mAw3JGjgapb05uCWwY=\");\nexport default useFetch;","map":{"version":3,"names":["axios","useState","useEffect","useFetch","_s","url","setUrl","titre","setTitre","api_key","requetteYoutube","get","then","response","console","log","data","items","snippet","title","id","catch","error","vid","request","fetch","method","headers","body","JSON","stringify","json"],"sources":["C:/projet info/appyoutube/frontend/src/customHooks/useFetch.js"],"sourcesContent":["import axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\n\r\n\r\n\r\n\r\nconst useFetch = () => {\r\n    const [url, setUrl]= useState('');\r\n    const [titre, setTitre] = useState('');\r\n    \r\n\r\n    useEffect (() => {\r\n    \r\n    \r\n    const api_key=\"AIzaSyAvbx7hVYcSosSEoqY8vmHMIKjmgUcQQW0\";\r\n    var requetteYoutube = \"https://www.googleapis.com/youtube/v3/videos?key=\" + api_key + \"&part=snippet&chart=mostPopular&regionCode=FR\"\r\n\r\n    axios.get(requetteYoutube).then(function (response) {\r\n        console.log(response);\r\n        //console.log(response.data.items[0].snippet.title)\r\n        setTitre(response.data.items[0].snippet.title);\r\n        setUrl(\"https://www.youtube.com/watch?v=\" + response.data.items[0].id);\r\n\r\n    }).catch(function (error){\r\n        console.log(error);\r\n    });\r\n\r\n    },[]);\r\n\r\n    useEffect (async () => {\r\n        const vid = {titre, url}\r\n        const request = await fetch('/api/topVids',{\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({vid})\r\n    });\r\n\r\n    const json = await request.json();\r\n\r\n    },[url]);\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default useFetch;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAKzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAEL,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGtCC,SAAS,CAAE,MAAM;IAGjB,MAAMO,OAAO,GAAC,yCAAyC;IACvD,IAAIC,eAAe,GAAG,mDAAmD,GAAGD,OAAO,GAAG,+CAA+C;IAErIT,KAAK,CAACW,GAAG,CAACD,eAAe,CAAC,CAACE,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAChDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACAL,QAAQ,CAACK,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,CAAC;MAC9Cb,MAAM,CAAC,kCAAkC,GAAGO,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC;IAE1E,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAC;MACrBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACtB,CAAC,CAAC;EAEF,CAAC,EAAC,EAAE,CAAC;EAELpB,SAAS,CAAE,YAAY;IACnB,MAAMqB,GAAG,GAAG;MAAChB,KAAK;MAAEF;IAAG,CAAC;IACxB,MAAMmB,OAAO,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAC;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP;MAAG,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,OAAO,CAACO,IAAI,CAAC,CAAC;EAEjC,CAAC,EAAC,CAAC1B,GAAG,CAAC,CAAC;AAKZ,CAAC;AAAAD,EAAA,CAtCKD,QAAQ;AAyCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}